<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guilherme Cruz</title>
    <description>Espaço desse desenvolvedor amante de Tartarugas Ninja e Pizza</description>
    <link>http://gcruz.com.br/</link>
    <atom:link href="http://gcruz.com.br/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 05 Jun 2017 15:14:25 -0300</pubDate>
    <lastBuildDate>Mon, 05 Jun 2017 15:14:25 -0300</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      
      <item>
        <title>Primeiros passos no InfluxDB</title>
        <description>&lt;p class=&quot;intro&quot;&gt;&lt;span class=&quot;dropcap&quot;&gt;M&lt;/span&gt;anipular o InfluxDB pode parecer uma missão muito difícil inicialmente, mas quem está acostumado com SQL verá que não é tão diferente disso.&lt;/p&gt;

&lt;p&gt;Eu já falei sobre a estrutura do InfluxDB e sobre o que é uma série temporal em &lt;a href=&quot;/blog/series-temporais-e-influxdb&quot;&gt;outro post aqui no blog&lt;/a&gt;. Desta vez, quero mostrar a manipulação dos dados no banco, então bora colocar a mão na massa!&lt;/p&gt;

&lt;h3 id=&quot;setup-rpido&quot;&gt;Setup rápido&lt;/h3&gt;
&lt;p&gt;Eu sugiro rodar o InfluxDB num &lt;a href=&quot;https://www.docker.com/what-container&quot;&gt;docker container&lt;/a&gt; pra facilitar a diversão:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker run --name influxzinho influxdb &lt;span class=&quot;c&quot;&gt;# use a opção -d pra rodar na opção detached&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Mas você pode instalar o InfluxDB normalmente seguindo o &lt;a href=&quot;https://portal.influxdata.com/downloads#influxdb&quot;&gt;manual de instalação oficial&lt;/a&gt; :)&lt;/p&gt;

&lt;p&gt;Então, é só abrir o client do banco dentro do container, vamos logo começar a festa:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; -it influxzinho bash
&lt;span class=&quot;c&quot;&gt;# Dentro do container:&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;influx&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;É importante ressaltar que, por padrão, o InfluxDB roda na porta &lt;code class=&quot;highlighter-rouge&quot;&gt;8086&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;O InfluxDB possui uma sintaxe própria para manipular suas estruturas de dados: o InfluxQL (InfluxDB Query Language). A partir daqui, é somente ele que utilizo para manipular o banco.&lt;/p&gt;

&lt;h3 id=&quot;databases&quot;&gt;Databases&lt;/h3&gt;

&lt;p&gt;Para listar as &lt;em&gt;databases&lt;/em&gt; existentes:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DATABASES&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;databases&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;----&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_internal&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;O nome da &lt;em&gt;database&lt;/em&gt; padrão do InfluxDB é a &lt;code class=&quot;highlighter-rouge&quot;&gt;_internal&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para criar uma &lt;em&gt;database&lt;/em&gt; nova basta usar o comando&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Uma vez criada, basta então alternar entre as &lt;em&gt;databases&lt;/em&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;Using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;insero-de-dados&quot;&gt;Inserção de dados&lt;/h3&gt;
&lt;p&gt;E agora? Vamos criar uma tabela? Determinar as colunas? E também os &lt;em&gt;Fields&lt;/em&gt;, as &lt;em&gt;Tags&lt;/em&gt; e os seus tipos?
Nada disso é necessário, jovem Padawan. A sintaxe da inserção de dados é responsável por definir toda a estrutura dos dados.&lt;/p&gt;

&lt;p&gt;O comando de criação de um ponto (registro) no banco é o &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt; (use ele com cuidado e carinho) que é descrito da seguinte maneira:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;measurement&amp;gt;&lt;/span&gt;[,&lt;span class=&quot;nt&quot;&gt;&amp;lt;tag_key&amp;gt;&lt;/span&gt;=&lt;span class=&quot;nt&quot;&gt;&amp;lt;tag_value&amp;gt;&lt;/span&gt;[,&lt;span class=&quot;nt&quot;&gt;&amp;lt;tag_key&amp;gt;&lt;/span&gt;=&lt;span class=&quot;nt&quot;&gt;&amp;lt;tag_value&amp;gt;&lt;/span&gt;]] &lt;span class=&quot;nt&quot;&gt;&amp;lt;field_key&amp;gt;&lt;/span&gt;=&lt;span class=&quot;nt&quot;&gt;&amp;lt;field_value&amp;gt;&lt;/span&gt;[,&lt;span class=&quot;nt&quot;&gt;&amp;lt;field_key&amp;gt;&lt;/span&gt;=&lt;span class=&quot;nt&quot;&gt;&amp;lt;field_value&amp;gt;&lt;/span&gt;] [&lt;span class=&quot;nt&quot;&gt;&amp;lt;timestamp&amp;gt;&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;O &lt;code class=&quot;highlighter-rouge&quot;&gt;measurement&lt;/code&gt; é obrigatório, por isso é que está envolvido pelos sinais &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;gt;&lt;/code&gt;. O que está entre colchetes simboliza que o seu conteúdo é opcional.&lt;/p&gt;

&lt;p&gt;Na prática, os comandos têm baixa complexidade. Vamos tomar o exemplo de medições de temperaturas no meu banco:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;celcius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;temperature&lt;/code&gt; será a minha &lt;strong&gt;measurement&lt;/strong&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;celcius&lt;/code&gt; com seu valor(&lt;code class=&quot;highlighter-rouge&quot;&gt;25.4&lt;/code&gt;) será um &lt;strong&gt;field&lt;/strong&gt;. Caso eu queira adicionar mais um &lt;strong&gt;field&lt;/strong&gt;, basta utilizar uma vírgula(&lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;) para separar os elementos:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;celcius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fahrenheit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Além disso, é fundamental utilizar as &lt;strong&gt;tags&lt;/strong&gt; para indexar a busca e filtrar os registros inseridos na base, &lt;a href=&quot;/blog/series-temporais-e-influxdb/#tags&quot;&gt;como já visto no episódio anterior&lt;/a&gt;. Para fazer isso, é só incluir a &lt;strong&gt;tag&lt;/strong&gt; após o &lt;strong&gt;measurement&lt;/strong&gt; separados por uma vírgula(&lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;) e deixar um espaço (&lt;code class=&quot;highlighter-rouge&quot;&gt; &lt;/code&gt;) no final pra separá-la dos &lt;strong&gt;fields&lt;/strong&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;city&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mar&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;í&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lia&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;celcius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fahrenheit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Caso queira ter mais de uma &lt;strong&gt;tag&lt;/strong&gt;, basta repetir a regra dos &lt;strong&gt;fields&lt;/strong&gt;: separe eles com uma vírgula&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;city&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mar&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;í&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;celcius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fahrenheit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Em todos os cenários anteriores o &lt;code class=&quot;highlighter-rouge&quot;&gt;timestamp&lt;/code&gt; é definido automaticamente com o valor do instante em que o registro é inserido. Entretanto, é possível determinar o valor do &lt;code class=&quot;highlighter-rouge&quot;&gt;timestamp&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;city&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mar&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;í&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lia&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;celcius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fahrenheit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1496510681952374020&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;consulta-de-dados&quot;&gt;Consulta de dados&lt;/h3&gt;
&lt;p&gt;Para exibir todos os registros de uma &lt;em&gt;measurement&lt;/em&gt;, o comando em InfluxQL é muito parecido com SQL:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;                &lt;span class=&quot;n&quot;&gt;celcius&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;city&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;fahrenheit&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;----                ------- ----      ---------- -----&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1496510104709742573&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1496510114111767822&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;              &lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1496510533023926338&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Mar&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;í&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lia&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1496510681952374018&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Mar&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;í&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lia&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;SP&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1496510681952374020&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Mar&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;í&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lia&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;SP&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Você pode olhar os fields definidos pra essa &lt;em&gt;measurement&lt;/em&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FIELD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KEYS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fieldKey&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;fieldType&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;--------   ---------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;celcius&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;float&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fahrenheit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;float&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;E também as tags:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TAG&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KEYS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tagKey&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;city&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;O comando &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; aceita também os condicionais de &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; para filtrar os resultados:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;city&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Marília'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;                &lt;span class=&quot;n&quot;&gt;celcius&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;city&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;fahrenheit&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;----                ------- ----    ---------- -----&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1496510533023926338&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Mar&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;í&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lia&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1496510681952374018&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Mar&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;í&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lia&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;SP&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1496510681952374020&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Mar&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;í&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lia&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;SP&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;consideraes-finais&quot;&gt;Considerações finais&lt;/h3&gt;
&lt;p&gt;Caso seja de seu interesse se aprofundar nos conceitos do InfluxQL, eu sugiro uma boa lida no &lt;a href=&quot;https://docs.influxdata.com/influxdb/latest/query_language/spec/&quot;&gt;manual de referência da linguagem&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Fora essa integração via client &lt;code class=&quot;highlighter-rouge&quot;&gt;influx&lt;/code&gt;, o InfluxDB também já possui uma integração HTTP. Existem bibliotecas em várias linguagens que já integram com esse banco de dados, então o caminho já está trilhado.&lt;/p&gt;

&lt;p&gt;Eu não falei sobre autenticação para enfatizar a manipulação dos dados. Entretanto, o usuário padrão do InfluxDB é o &lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt;, cuja senha também é &lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt;. Você deve criar os seus usuários de acordo com a necessidade de suas aplicações (seja cuidadoso com segurança &lt;strong&gt;sempre&lt;/strong&gt;). Utilize o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE USER&lt;/code&gt; seguindo as &lt;a href=&quot;https://docs.influxdata.com/influxdb/v1.2/query_language/spec/&quot;&gt;indicações do manual&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Essa ferramenta é muito poderosa, use ela com cuidado! Use as tags pra indexação e fields pros dados que realmente são a sua série temporal.&lt;/p&gt;

&lt;p&gt;Espero que esse post ajude em sua jornada, jovem. Contribuições são bem vindas :)&lt;/p&gt;

&lt;p&gt;Bom dia e boa sorte!&lt;/p&gt;
</description>
        <pubDate>Sun, 04 Jun 2017 00:00:00 -0300</pubDate>
        <link>http://gcruz.com.br/blog/primeiros-passos-influxdb/</link>
        <guid isPermaLink="true">http://gcruz.com.br/blog/primeiros-passos-influxdb/</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Séries temporais e o InfluxDB</title>
        <description>&lt;p class=&quot;intro&quot;&gt;&lt;span class=&quot;dropcap&quot;&gt;O&lt;/span&gt; InfluxDB é um banco utilizado para manipular séries temporais, mas desejo tratar aqui um pouco melhor o conceito de série temporal e a estrutura básica desse banco de dados.&lt;/p&gt;

&lt;p&gt;Registros de determinada variável (leia-se conjunto de observações) que representam um período são o que chamamos de série temporal. Muitas vezes armazenamos esses dados em bancos de dados tradicionais (entidade relacionamento), afinal é possível e plausível estruturar esses dados nesse tipo de modelagem.&lt;/p&gt;

&lt;p&gt;Em geral, séries temporais se tornam gráficos que representam um determinado período, como por exemplo a quantidade de usuários que acessam um sistema por dia ao longo de um ano, ou ainda um gráfico das despesas mensais de uma empresa na última década. Essas séries de dados que cruzam um período são as séries temporais.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/img/2017_06_03_steam_users.png&quot; alt=&quot;&quot; /&gt;
    &lt;figcaption&gt;Usuários online simultaneamente no Steam (48 horas). Fonte: &lt;a href=&quot;http://store.steampowered.com/stats/?l=portuguese&quot; target=&quot;_blank&quot;&gt; Steam Game and Player Statistics&lt;/a&gt;.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Na imagem acima temos um exemplo de série temporal. Neste gráfico observamos os usuários online na plataforma de games &lt;a href=&quot;http://store.steampowered.com/&quot;&gt;Steam&lt;/a&gt;: o eixo &lt;strong&gt;y&lt;/strong&gt; mostra a quantidade de usuários ativos baseado no eixo &lt;strong&gt;x&lt;/strong&gt; que segue uma linha cronológica.&lt;/p&gt;

&lt;p&gt;Um critério que vale a atenção é a frequência dos dados. Alguns autores determinam que o período de intervalo entre as observações deve ser constante, mas isso não descaracteriza a série temporal, não completamente. Dados espaçados por intervalos diferentes pode acarretar em alguns problemas do seu modelo final: como representar um gráfico de despesas mensais se faltar um mês? Ou ainda se acumular o valor no mês seguinte? Essa variação pode gerar problemas na hora de interpretar os dados coletados se não for tratado devidamente.&lt;/p&gt;

&lt;p&gt;Uma série é composta por 4 tipos te variações: Tendência, Ciclo, Sazonalidade e Variações Irregulares. De toda série é possível extrair essas características, obviamente que cada série expressará de forma distintas cada tipo de variação, algumas dessas características podem ser até nulas (ou neutras).&lt;/p&gt;

&lt;h3 id=&quot;e-o-tal-do-influxdb&quot;&gt;E o tal do InfluxDB?&lt;/h3&gt;

&lt;p&gt;O &lt;a href=&quot;https://github.com/influxdata/influxdb&quot;&gt;InfluxDB&lt;/a&gt; é um banco de dados orientado a séries temporais, ou seja, ele foi projetado e construído pra tratar séries temporais de uma maneira otimizada em performance e modelagem.&lt;/p&gt;

&lt;p&gt;Lendo a &lt;a href=&quot;https://docs.influxdata.com/influxdb/v1.2/concepts/key_concepts/&quot;&gt;documentação dos conceitos base do InfluxDB&lt;/a&gt; é possível entender melhor as características desse banco. Levantei alguns pontos que para mim foram fundamentais pra compreender a estrutura geral.&lt;/p&gt;

&lt;p&gt;Dois pontos iniciais foram importantes para que eu entendesse esse banco de dados:
1. Todo registro no banco é obrigatório que se registre a coluna &lt;code class=&quot;highlighter-rouge&quot;&gt;time&lt;/code&gt; com o conteúdo de uma timestamp.
2. Existem dois tipos de estruturas que você pode armazenar: &lt;strong&gt;Fields&lt;/strong&gt; (dados) e &lt;strong&gt;Tags&lt;/strong&gt; (“metadados”).&lt;/p&gt;

&lt;p&gt;Calma que todo mundo está nervoso. Vamos ver mais informações sobre essa estrutura de banco na sequência.&lt;/p&gt;

&lt;h5 id=&quot;fields&quot;&gt;Fields&lt;/h5&gt;
&lt;p&gt;&lt;em&gt;Fields&lt;/em&gt; representam colunas que você nomeia e armazena dados importantes para a sua representação dos dados, funciona no modelo chave-valor. A &lt;em&gt;Field Key&lt;/em&gt; é uma string e representa o nome da coluna e então, o &lt;em&gt;Field Value&lt;/em&gt; é o dado armazenado no campo,&lt;/p&gt;

&lt;p&gt;Não se pode ter um registro sem pelo menos um &lt;strong&gt;Field&lt;/strong&gt;, é obrigatório, trata-se de uma informação básica. O field você pode gravar informações de todos os tipos, mas o importante é que ela represente dados que você exibiria num gráfico, cujo único papel é representar uma medida em um instante.&lt;/p&gt;

&lt;p&gt;Lembre-se que os &lt;em&gt;Fields&lt;/em&gt; não são indexados, isto é, a busca por um &lt;em&gt;Field&lt;/em&gt; no banco implica na leitura de todos os valores e após isso a sua filtragem: resultando em consultas mais lentas. Ou seja, em bom português, &lt;em&gt;Fields&lt;/em&gt; não devem ser dados que precisam de critérios de busca (indexação).&lt;/p&gt;

&lt;h5 id=&quot;tags&quot;&gt;Tags&lt;/h5&gt;
&lt;p&gt;&lt;em&gt;Tags&lt;/em&gt; representam colunas que você nomeia e armazena dados também, no mesmo formato que os &lt;em&gt;Fields&lt;/em&gt;: em chave-valor. A característica do dado armazenado deve ser diferente, esse dado é uma espécie de metadado, ele será o alvo das suas consultas no banco: é esse campo aqui que estará no seu &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; na hora de realizar a sua consulta.&lt;/p&gt;

&lt;p&gt;As &lt;em&gt;Tags&lt;/em&gt; são indexadas, ou seja, as preferencialmente adotadas como critério de busca. O banco de dados considera elas como opcionais na estrutura de dados, mas se não utiizá-las implicará em busca lentas.&lt;/p&gt;

&lt;p&gt;O formato da chave e do valor das &lt;em&gt;Tags&lt;/em&gt; são &lt;em&gt;strings&lt;/em&gt;, ou seja, quando armazenar alguma informação, mesmo que de caráter numérico, será convertida em &lt;em&gt;string&lt;/em&gt;.&lt;/p&gt;

&lt;h5 id=&quot;measurement&quot;&gt;Measurement&lt;/h5&gt;
&lt;p&gt;&lt;em&gt;Measurement&lt;/em&gt; é um agrupador de &lt;em&gt;Tags&lt;/em&gt; e &lt;em&gt;Fields&lt;/em&gt;, ao traçar um paralelo ao modelo de entidade relacionamento, o conceito de &lt;em&gt;Measurement&lt;/em&gt; é equivalente ao da tabela. O nome do &lt;em&gt;Measurement&lt;/em&gt; representa o valor dos valores que são armazenados nele, tal qual uma tabela.&lt;/p&gt;

&lt;h5 id=&quot;srie-temporal&quot;&gt;Série Temporal&lt;/h5&gt;
&lt;p&gt;Uma série (&lt;em&gt;series&lt;/em&gt;) é um conjunto de dados (pontos) resultantes da parametrização das &lt;em&gt;Tags&lt;/em&gt;. Isto é, quando realizar uma consulta no &lt;em&gt;Measurement&lt;/em&gt; com filtros (condições comparando as &lt;em&gt;Tags&lt;/em&gt;), a resultante é uma série temporal.&lt;/p&gt;

&lt;h5 id=&quot;database&quot;&gt;Database&lt;/h5&gt;
&lt;p&gt;&lt;em&gt;Database&lt;/em&gt; é o mesmo conceito do que o já aplicado e conhecido em bancos SQL tradicionais, ela agrupa as “tabelas”, nesse caso, as &lt;em&gt;Measurements&lt;/em&gt;.&lt;/p&gt;

&lt;h5 id=&quot;ltimos-detalhes&quot;&gt;Últimos detalhes&lt;/h5&gt;
&lt;p&gt;O &lt;em&gt;Field&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;time&lt;/code&gt; e ao menos mais um outro &lt;em&gt;Field&lt;/em&gt; são obrigatórios por serem a base de um banco de dados orientado a séries temporais, afinal o principal objetivo é representar uma série &lt;strong&gt;temporal&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;tudo-certo-ento&quot;&gt;Tudo certo então?&lt;/h3&gt;
&lt;p&gt;Descrevi os conceitos sem trazer muitos exemplos, mas não fique triste comigo. O &lt;a href=&quot;https://docs.influxdata.com/influxdb/v1.2/concepts/key_concepts/#sample-data&quot;&gt;exemplo na página do InfluxDB&lt;/a&gt; é muito ilustrativo, você pode conferir lá esse conteúdo também.&lt;/p&gt;

&lt;p&gt;Espero que esse material tenha ajudado a compreender um pouco melhor esse conceito. Qualquer comentário construtivo ou sugestão é muito bem vindo! :)&lt;/p&gt;

&lt;p&gt;Bom dia e boa sorte!&lt;/p&gt;

</description>
        <pubDate>Sat, 03 Jun 2017 00:00:00 -0300</pubDate>
        <link>http://gcruz.com.br/blog/series-temporais-e-influxdb/</link>
        <guid isPermaLink="true">http://gcruz.com.br/blog/series-temporais-e-influxdb/</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Conexões remotas de USB via usbip</title>
        <description>&lt;p class=&quot;intro&quot;&gt;&lt;span class=&quot;dropcap&quot;&gt;I&lt;/span&gt;magine utilizar a rede para compartilhar uma conexão de um dispositivo USB, seja ele uma câmera, um HD externo, mouse, impressora, ou qualquer outro dispositivo. Há uma ferramenta no repositório Linux que resolve isso.&lt;/p&gt;

&lt;p&gt;Foi com essa necessidade que eu conheci o &lt;a href=&quot;http://usbip.sourceforge.net/&quot;&gt;usbip&lt;/a&gt;. Ele foi criado para transmitir pela rede portas USB (&lt;em&gt;USB over IP&lt;/em&gt;). O usbip abstrai uma conexão USB em um device genérico (&lt;em&gt;server&lt;/em&gt;), por meio do VHCI, e a partir daí transmitir os dados pra outro computador via rede. Isso permite que este receptor (&lt;em&gt;client&lt;/em&gt;) dos dados USB possa montar seu próprio device e injetar a comunicação que ele recebe via rede.&lt;/p&gt;

&lt;p&gt;Acabei de descrever o processo como se ele fosse numa mão única, um &lt;em&gt;read-only&lt;/em&gt;, mas não é verdade. O &lt;em&gt;client&lt;/em&gt; também pode enviar os dados pro &lt;em&gt;server&lt;/em&gt; pela mesma comunicação anteriormente estabelecida.&lt;/p&gt;

&lt;p&gt;Quem gerencia os devices que subirão, bem como a comunicação entre &lt;em&gt;clients&lt;/em&gt; e &lt;em&gt;server&lt;/em&gt; é o ilustríssimo usbip. E você não leu errado, &lt;em&gt;clients&lt;/em&gt; no plural mesmo, é possível que um mesmo dispositivo seja compartilhado com diversas outras máquinas.&lt;/p&gt;

&lt;p&gt;O usbip foi criado por &lt;strong&gt;Takahiro Hirofuchi&lt;/strong&gt; com uma &lt;a href=&quot;https://www.usenix.org/legacy/events/usenix05/tech/freenix/hirofuchi/hirofuchi_html/index.html&quot;&gt;publicação inicial&lt;/a&gt; que explica os conceitos e a arquitetura da aplicação. Caso você queira entender melhor como as coisas funcionam debaixo do capô, eu sugiro que olhe também o &lt;a href=&quot;http://usbip.sourceforge.net/&quot;&gt;site original da aplicação&lt;/a&gt; e o &lt;a href=&quot;https://github.com/torvalds/linux/tree/master/tools/usb/usbip&quot;&gt;repositório&lt;/a&gt; que atualmente está no &lt;em&gt;core tools&lt;/em&gt; do Linux (obrigado L. Torvalds).&lt;/p&gt;

&lt;p&gt;O usbip foi concebido para integrar devices entre diferentes sistemas operacionais. Fiz alguns testes com Linux e Windows e verifiquei que funciona perfeitamente &lt;strong&gt;apenas entre duas máquinas com Linux&lt;/strong&gt;. Segui as instruções, instalando e compilando os drivers pro Windows, mas aparentemente surgiu alguma incompatibilidade que não foi tratada. Gostaria de ter testado também no macOS antes dessa publicação, mas não foi possível, então sinta-se à vontade :).&lt;/p&gt;

&lt;h3 id=&quot;instalao&quot;&gt;Instalação&lt;/h3&gt;

&lt;p&gt;Atualmente a versão estável do usbip é a 2.0. Para instalar, basta que você baixe o &lt;a href=&quot;https://github.com/torvalds/linux/tree/master/tools/usb/usbip&quot;&gt;código fonte&lt;/a&gt; e o compile, como utilizo a distribuição Ubuntu 16.04, instalei o pacote do &lt;em&gt;tools-generic&lt;/em&gt; da seguinte forma:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo apt-get install linux-tools-generic&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;ateno&quot;&gt;Atenção&lt;/h4&gt;
&lt;p&gt;Utilizaremos duas aplicações: &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;usbip&lt;/code&gt;&lt;/strong&gt; e &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;usbipd&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;No caso do Ubuntu, você terá a aplicação disponível na pasta &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/lib/linux-tools/versao-do-kernel-generic/&lt;/code&gt;
onde &lt;code class=&quot;highlighter-rouge&quot;&gt;versao-do-kernel-generic&lt;/code&gt; pode e vai variar de acordo com a versão da &lt;em&gt;tools-generic&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Caso você tenha compilado, essas duas aplicações estarão disponíveis por padrão dentro da pasta &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;server&quot;&gt;Server&lt;/h3&gt;

&lt;p&gt;Antes de rodar a aplicação que irá distribuir um dispositivo USB, é preciso habilitar 2 módulos:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo modprobe usbip_core
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo modprobe usbip_host&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Basta então que invoque a aplicação &lt;em&gt;server&lt;/em&gt;, em sua respectiva pasta:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo ./usbipd
usbipd: info: starting usbipd &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;usbip-utils 2.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
usbipd: info: listening on 0.0.0.0:3240
usbipd: info: listening on :::3240&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A aplicação responde avisando onde estará disponível a comunicação com outro device, no caso por padrão, na porta &lt;code class=&quot;highlighter-rouge&quot;&gt;3240&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Se você não quiser ver os logs e/ou não interagir diretamente com a aplicação, basta utilizar a opção &lt;code class=&quot;highlighter-rouge&quot;&gt;-D&lt;/code&gt; que roda como &lt;em&gt;daemon&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;É possível visualizar os dispositivos locais disponíveis por meio do comando:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./usbip list -l
 - busid 1-1.1.1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;413c:8161&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   Dell Computer Corp. : Integrated Keyboard &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;413c:8161&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

 - busid 1-1.1.2 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;413c:8162&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   Dell Computer Corp. : Integrated Touchpad &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Synaptics] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;413c:8162&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

 - busid 2-1.8 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0c45:6481&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   Microdia : unknown product &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0c45:6481&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A partir dessa listagem é possível disponibilizar algum dispositivo para conexão, basta executar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo ./usbip &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; -b 1-1.1.2 &lt;span class=&quot;c&quot;&gt;#1-1.1.2 é o ID do dispositivo listado anteriormente&lt;/span&gt;
usbip: info: &lt;span class=&quot;nb&quot;&gt;bind &lt;/span&gt;device on busid 1-1.1.2: &lt;span class=&quot;nb&quot;&gt;complete&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;client&quot;&gt;Client&lt;/h3&gt;

&lt;p&gt;Agora em outra máquina, é possível conectar-se ao &lt;em&gt;server&lt;/em&gt; e conversar com os dispositivos que estão disponíveis. Para isso, é preciso saber o endereço IP da máquina que está rodando o &lt;em&gt;server&lt;/em&gt;, nos exemplos abaixo assumirei que esse IP é &lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.0.17&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Além de ter também a aplicação usbip instalada nessa máquina, os seguintes módulos precisam ser ativados:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo modprobe usbip_core
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo modprobe vhci-hcd&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Para listar os dispositivos disponíveis do &lt;em&gt;server&lt;/em&gt; (anteriormente habilitados pelo &lt;code class=&quot;highlighter-rouge&quot;&gt;bind&lt;/code&gt;), execute:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./usbip list -r 192.168.0.17
Exportable USB devices
&lt;span class=&quot;o&quot;&gt;======================&lt;/span&gt;
 - 192.168.0.17
    1-1.1.2: Dell Computer Corp. : Integrated Touchpad &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Synaptics] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;413c:8162&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
           : /sys/devices/pci0000:00/0000:00:1a.0/usb1/1-1/1-1.1/1-1.1.2
           : &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Defined at Interface level&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;00/00/00&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Basta então, se conectar ao dispositivo que desejar através do seu ID:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sudo ./usbip attach -r 192.168.0.17 -b 1-1.1.2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;E voilà! Você consegue então utilizar por meio da rede, um dispositivo USB que está em outra máquina!&lt;/p&gt;

&lt;h3 id=&quot;consideraes-finais&quot;&gt;Considerações finais&lt;/h3&gt;

&lt;p&gt;As possibilidades de utilização são ampliadas se você pensar que o seu USB &lt;em&gt;server&lt;/em&gt; pode ser RaspberryPi, por exemplo. Utilizo essa aplicação para alcançar alguns cenários de IoT, mas começar pelo mouse pode ser uma boa (no meu caso foi bem divertido).&lt;/p&gt;

&lt;p&gt;A taxa de transferência de dados pode ser um problema dependendo do tipo de dispositivo USB que você deseja conectar via rede, como estou aplicando em cenários menores, isso me atende, mas quando se trata de disco externo ou mesmo pen-drive nota-se um atraso bem grande.&lt;/p&gt;

&lt;p&gt;Utilize o &lt;code class=&quot;highlighter-rouge&quot;&gt;lsusb&lt;/code&gt; pra te ajudar quando tiver dúvida sobre os dispositivos conectados em sua máquina. Isso serve tanto pro &lt;em&gt;client&lt;/em&gt; quanto pro &lt;em&gt;server&lt;/em&gt;, pode ser uma boa baliza para seus experimentos e testes.&lt;/p&gt;

&lt;p&gt;A maior parte dos comandos precisa ser executado com permissão de usuário &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;, isso acontece porque é preciso manipular dispositivos internamente, o que pede algum grau de permissão além do usuário simples. Mas fique tranquilo, não há código malicioso nessa aplicação, ela é canônica e foi avaliada por uma equipe qualificada.&lt;/p&gt;

&lt;p&gt;Para desconectar os dispositivos, utilize os comandos &lt;code class=&quot;highlighter-rouge&quot;&gt;detach&lt;/code&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;unbind&lt;/code&gt; no &lt;em&gt;client&lt;/em&gt; e &lt;em&gt;server&lt;/em&gt; respectivamente. O comando &lt;code class=&quot;highlighter-rouge&quot;&gt;help&lt;/code&gt; pode te ajudar bastante nisso ;).&lt;/p&gt;

&lt;p&gt;Não há autenticação para acessar os dispositivos, como você pode ter observado. Portanto, seja cuidadoso ao compartilhar os &lt;em&gt;devices&lt;/em&gt;, garantir que somente as pessoas devidas tem acesso a essa rede é um bom caminho.&lt;/p&gt;

&lt;p&gt;Não há necessidade alguma do &lt;em&gt;server&lt;/em&gt; ter os drivers de utilização do &lt;em&gt;device&lt;/em&gt;, apenas o &lt;em&gt;client&lt;/em&gt;. O que de certa forma é incrível, pois no final a rede acaba sendo um mero condutor do sinal!&lt;/p&gt;

&lt;p&gt;Aproveite, há muitas possibilidades para serem exploradas :)&lt;/p&gt;

&lt;p&gt;Bom dia e boa sorte!&lt;/p&gt;
</description>
        <pubDate>Sat, 13 May 2017 00:00:00 -0300</pubDate>
        <link>http://gcruz.com.br/blog/conexoes-remotas-usbip/</link>
        <guid isPermaLink="true">http://gcruz.com.br/blog/conexoes-remotas-usbip/</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Conexões SQL em Go</title>
        <description>&lt;p class=&quot;intro&quot;&gt;&lt;span class=&quot;dropcap&quot;&gt;U&lt;/span&gt;tilizando conexões SQL em Go por meio da interface de &lt;a href=&quot;https://golang.org/pkg/database/sql/&quot;&gt;database/sql&lt;/a&gt;? Tenho alguns pontos pra compartilhar contigo.&lt;/p&gt;

&lt;p&gt;Você está lá empolgadão com a sua nova API, que vai performar lindamente em Go, aí chega na parte da integração com o seu banco e fica confuso. Não que tenha acontecido comigo, mas conheço um colega meu que passou por isso.&lt;/p&gt;

&lt;h3 id=&quot;driver&quot;&gt;Driver&lt;/h3&gt;

&lt;p&gt;Vamos tirar esse rancor do seu coração e vamos olhar para a integração de banco  de dados em Go por meio da biblioteca &lt;a href=&quot;https://golang.org/pkg/database/sql/&quot;&gt;database/sql&lt;/a&gt;. Alguém já se preocupou em padronizar essa comunicação SQL e criou essa interface padrão que está definida nesse projeto &lt;em&gt;database/sql&lt;/em&gt;. A partir daqui, a única coisa que você precisa é se apropriar de um driver da sua aplicação de banco que foi implementado em cima dessa interface padrão. Tem uma &lt;a href=&quot;https://golang.org/pkg/database/sql/&quot;&gt;lista oficial aqui&lt;/a&gt; das principais implementações de drivers, escolha aquela que mais rolar um clima.&lt;/p&gt;

&lt;p&gt;Eu escolhi um driver de &lt;a href=&quot;https://github.com/go-sql-driver/mysql/&quot;&gt;MySQL&lt;/a&gt; pra exemplificar o uso, mas como a interface é a mesma pra todos, o conhecimento aqui compartilhado pode servir para outras integrações.&lt;/p&gt;

&lt;h3 id=&quot;conexo&quot;&gt;Conexão&lt;/h3&gt;

&lt;p&gt;O primeiro passo, é abrir a conexão com o banco de dados:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;database/sql&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;/* importei com '_' pois é preciso inicializar a biblioteca, e evitar
   efeitos colaterais (como o fato de não chamá-la diretamente no seu
   código) */&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;github.com/go-sql-driver/mysql&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// a ideia dessa função aqui é retornar uma forma de conexão com o banco&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//  aqui você substitui as variáveis pelas suas configs&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driverConfig&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s:%s@tcp(%s:%s)/%s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pass&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;host&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;database&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mysql&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driverConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;database.Connect ERROR: %s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Algo muito importante de se entender é que o método &lt;em&gt;sql.Open&lt;/em&gt; não entrega uma única conexão com o banco, mas sim um pool “auto gerenciado” de conexões. Entretanto, você vai tratar esse &lt;em&gt;*sql.DB&lt;/em&gt; como se fosse uma conexão mesmo. Dá pra limitar a quantidade de conexões do pool pela &lt;a href=&quot;https://golang.org/pkg/database/sql/#DB.SetMaxIdleConns&quot;&gt;quantidade de conexões que estão ociosas&lt;/a&gt;, ou &lt;a href=&quot;https://golang.org/pkg/database/sql/#DB.SetMaxOpenConns&quot;&gt;pela quantidade conexões abertas&lt;/a&gt; ou ainda &lt;a href=&quot;https://golang.org/pkg/database/sql/#DB.SetConnMaxLifetime&quot;&gt;pelo tempo conexão&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sendo assim, o mais sensato é iniciar sua aplicação criando essa “conexão” com o banco e fechá-la ao encerrar sua aplicação. Dessa maneira, o pool de conexões estará disponível ao longo de toda a execução de sua aplicação, as conexões surgirão de acordo com a necessidade e se eliminarão com as suas configurações de quantidade de conexões no pool(caso hajam).&lt;/p&gt;

&lt;p&gt;Pra encerrar o pool de conexões com o banco, basta chamar a função &lt;em&gt;Close&lt;/em&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// Você pode também criar uma função pra isso, caso desejar&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Disconnect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;pra-fechar&quot;&gt;Pra fechar&lt;/h3&gt;

&lt;p&gt;Obviamente que existem alguns frameworks que já gerenciam isso de alguma forma pra você, mas caso seja da sua vontade utilizar e integrar com essas soluções diretamente, esse aqui é o caminho das pedras.&lt;/p&gt;

&lt;p&gt;Conhece alguma forma melhor de fazer isso, ou tem alguma sugestão? Deixe nos comentários uma contribuição ;)&lt;/p&gt;

&lt;p&gt;Bom dia e boa sorte!&lt;/p&gt;
</description>
        <pubDate>Sun, 11 Dec 2016 00:00:00 -0200</pubDate>
        <link>http://gcruz.com.br/blog/conexoes-sql-em-go/</link>
        <guid isPermaLink="true">http://gcruz.com.br/blog/conexoes-sql-em-go/</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Primeiras dicas em Go</title>
        <description>&lt;p class=&quot;intro&quot;&gt;&lt;span class=&quot;dropcap&quot;&gt;R&lt;/span&gt;olou um workshop de Go essa semana, gostaria de compartilhar alguns conhecimentos e apresentar uma oportunidade pra conhecer mais sobre o assunto.&lt;/p&gt;

&lt;p&gt;Eu ando brincando com a linguagem Go há um mês. Desde então, uso as minhas horas vagas pra aprender e escrever algumas linhas de código em uma API bem simples de autenticação e banco de dados relacional.&lt;/p&gt;

&lt;p&gt;No dia 29/10, tive o privilégio de me encontrar com uma parte da comunidade de Go no escritório da Red Hat em São Paulo. Rolou um workshop com o caríssimo &lt;a href=&quot;https://twitter.com/crgimenes&quot;&gt;Cesar Gimenes&lt;/a&gt;, ele trouxe o &lt;a href=&quot;https://github.com/crgimenes/Go-Hands-On&quot;&gt;Go Hands On&lt;/a&gt;, que é basicamente um repositório que ele mesmo criou com exemplos e explicações sobre alguns pontos importantes para a introdução à linguagem Go. Caso queira ficar por dentro dos eventos da comunidade de Go na &lt;em&gt;terra da garoa&lt;/em&gt;, basta se unir a essa turma no &lt;a href=&quot;http://www.meetup.com/pt-BR/golangbr/&quot;&gt;Meetup&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Caso você queira ver como foi o encontro, o carismático &lt;a href=&quot;https://twitter.com/ecanuto&quot;&gt;Everaldo Canuto&lt;/a&gt; fez um &lt;a href=&quot;https://www.tocadocanuto.com.br/2016/workshop-basico-de-go-lang/&quot;&gt;post em seu blog&lt;/a&gt; mostrando a galera ;)&lt;/p&gt;

&lt;p&gt;Pra mim, foi uma excelente oportunidade de aplicar minha experiência de Ruby em outra linguagem. Tivemos presente programadores com uma bagagem legal em Go, o que nos permitiu explorar vários paralelos com outros cenários e linguagens. O próprio César confessou que poderíamos fazer um bingo com todas as linguagens que ele citava ao longo das explicações. Como a linguagem Go não é orientada a objetos, o conceito de pacotes é a forma que se tem de organizar a casa. Isso tem sido um ponto muito interessante pra minha evolução enquanto programador, pois essa mudança de paradigma me faz pensar fora da caixa (tanto em Go quanto em Ruby).&lt;/p&gt;

&lt;p&gt;Você pode aprender sobre Go no próprio &lt;a href=&quot;https://golang.org/&quot;&gt;site da linguagem&lt;/a&gt;, que além de ter um &lt;a href=&quot;https://golang.org/doc/install&quot;&gt;Getting Started&lt;/a&gt;, tem também a &lt;a href=&quot;https://golang.org/doc/&quot;&gt;documentação&lt;/a&gt; e um &lt;a href=&quot;https://tour.golang.org/welcome/1&quot;&gt;tour&lt;/a&gt; que é &lt;em&gt;repetaculê&lt;/em&gt;! Decidi trazer aqui algumas coisas que eu vi no workshop e achei curiosas. Lembrando que você pode encontrar o material completo no repositório &lt;a href=&quot;https://github.com/crgimenes/Go-Hands-On&quot;&gt;Go Hands On&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;environment&quot;&gt;Environment&lt;/h3&gt;
&lt;p&gt;Existe um comando pra formatar seu código fonte no padrão da linguagem Go. É esse meninão aqui:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;go fmt meu_arquivo.go&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Duas coisas que chamaram minha atenção aqui:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;O uso de &lt;em&gt;tabs&lt;/em&gt; ao invés de espaços&lt;/li&gt;
  &lt;li&gt;As chaves abrem na mesma linha em que o método é declarado&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;E pronto! Fim de discussão! &lt;em&gt;Habemus padrão&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;variveis&quot;&gt;Variáveis:&lt;/h3&gt;
&lt;p&gt;Funções anônimas existem e podem ser armazenadas em variáveis:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;n&quot;&gt;ola&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Olá da função anônima!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ola&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sempre admirei javascript pela forma com que trabalha com esse tipo de função. Gostei do que Go fez com essa possibilidade.&lt;/p&gt;

&lt;h3 id=&quot;funes&quot;&gt;Funções:&lt;/h3&gt;
&lt;p&gt;Mande a sua função pra dançar como parâmetro de uma função:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;c&quot;&gt;// função que recebe uma função como parâmetro&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;printFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valor&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aux&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finalmente entendi por que os métodos começam com letra maiúscula. Na verdade, a “maiúsculês” dessa primeira letra determina que esse método do pacote é público. Caso deseje criar um método privado, basta criar o método com a primeira letra minúscula.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;público &lt;em&gt;=&amp;gt;&lt;/em&gt; maiúsculo&lt;/li&gt;
  &lt;li&gt;privado &lt;em&gt;=&amp;gt;&lt;/em&gt; minúsculo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Um conceito minimalista da máxima &lt;em&gt;Menos é mais&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;for&quot;&gt;For&lt;/h3&gt;
&lt;p&gt;Quando você vê essa estrutura de iteração em Go você percebe que ela resume todas as outras formas de iteração conhecidas de outras linguagens. Isso significa que o &lt;em&gt;while&lt;/em&gt;, &lt;em&gt;loop&lt;/em&gt;, &lt;em&gt;do while&lt;/em&gt; e outras tantas formas de iteração nativas que você conhece é o &lt;em&gt;for&lt;/em&gt; de Go. Algo que me chamou a atenção foi o uso do &lt;em&gt;range&lt;/em&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;n&quot;&gt;potato&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Batata&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;potato&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;potato[%v] = %q&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ele resolve iteração de string, array e map de uma forma simples: Entrega sempre chave(índice) e valor.&lt;/p&gt;

&lt;h3 id=&quot;concorrncia&quot;&gt;Concorrência&lt;/h3&gt;
&lt;p&gt;O ponto que chama muito a atenção das pessoas em Go é o tratamento de concorrência. Além do conceito de &lt;em&gt;go routines&lt;/em&gt;, algo que me chamou a atenção foi o condicional &lt;em&gt;select&lt;/em&gt; que é um consumidor de canais, ele executa uma única vez o canal que comunicar algo primeiro, ou seja: ouve múltiplos canais e responde aquele que falar primeiro.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;canal 1 retornou :&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;canal 2 retornou :&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Outro ponto interessante sobre concorrência é o comportamento dos processos chamados pela &lt;em&gt;go routine&lt;/em&gt;: caso a aplicação seja finalizada, os canais e as rotinas são exterminados. Portanto, caso esse cenário não seja desejado, devemos criar uma condição de tratamento. Pra isso, é preciso que a aplicação receba sinais e os trate corretamente:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;k&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Signal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Notify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Interrupt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// espera pelo sinal&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Bye bye Human!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Descobri um site &lt;em&gt;repetaculê&lt;/em&gt; pra ilustrar paralelismo em Go, que é o &lt;a href=&quot;http://divan.github.io/posts/go_concurrency_visualize/&quot;&gt;Visualizing Concurrency in Go&lt;/a&gt;. Tente não ficar impressionado com o carinho que houve pra construir esse conteúdo :)&lt;/p&gt;

&lt;h3 id=&quot;pacotes&quot;&gt;Pacotes&lt;/h3&gt;
&lt;p&gt;Tem uma documentação bacana sobre pacotes disponíveis em &lt;a href=&quot;http://labix.org/gopkg.in&quot;&gt;gopkg.in&lt;/a&gt;. Lá estão centralizadas várias bibliotecas que podem ajudar no dia a dia de trabalho, encontrar algumas ferramentas pra escavar e sair usando.&lt;/p&gt;

&lt;h3 id=&quot;pra-fechar&quot;&gt;Pra fechar&lt;/h3&gt;
&lt;p&gt;Fora esses pontos que eu trouxe, vimos muitas outras coisas no workshop, mas aí eu sugiro que você abra o &lt;a href=&quot;https://github.com/crgimenes/Go-Hands-On&quot;&gt;repositório&lt;/a&gt; e confira o material na íntegra, além, é claro, de contribuir com ele na construção do conhecimento!&lt;/p&gt;

&lt;p&gt;Gostaria de aproveitar e agradecer ao &lt;a href=&quot;https://twitter.com/crgimenes&quot;&gt;Cesar&lt;/a&gt; pelo material e pela disponibilidade, além da organização do &lt;a href=&quot;https://twitter.com/jeffprestes/&quot;&gt;Jeff Prestes&lt;/a&gt; e deixar o meu muitíssimo obrigado ao pessoal da Red Hat por apoiar o encontro.&lt;/p&gt;

&lt;p&gt;Agora me sinto mais preparado pra continuar a desenvolver o trabalho com a minha humilde API. Espero em breve poder fazer coisas cada vez maiores com essa linguagem.&lt;/p&gt;

&lt;p&gt;Bom dia e boa sorte!&lt;/p&gt;
</description>
        <pubDate>Sun, 30 Oct 2016 00:00:00 -0200</pubDate>
        <link>http://gcruz.com.br/blog/primeiras-dicas-em-go/</link>
        <guid isPermaLink="true">http://gcruz.com.br/blog/primeiras-dicas-em-go/</guid>
        
        
      </item>
      
    
      
      <item>
        <title>Seja Bem Vindo :)</title>
        <description>&lt;p class=&quot;intro&quot;&gt;&lt;span class=&quot;dropcap&quot;&gt;C&lt;/span&gt;omeço aqui uma nova jornada, assumi comigo a missão de trazer conhecimentos de tecnologia que venho adquirindo ao longo do tempo.&lt;/p&gt;

&lt;p&gt;Minha carreira até o presente momento, foi construída sobre a linguagem &lt;a href=&quot;https://www.ruby-lang.org&quot;&gt;Ruby&lt;/a&gt;. Trabalhei com muitos projetos Ruby on Rails desde 2010, acompanho esse framework desde sua versão 2.3. Eu diria que 80% do meu conhecimento alcançado até aqui é em backend, e o restante, obviamente, em frontend.&lt;/p&gt;

&lt;p&gt;Em virtude das linguagens compiladas começarem a ganhar destaque novamente no cenário de desenvolvimento de software, tenho me empenhado em aprender &lt;a href=&quot;https://golang.org/&quot;&gt;Go&lt;/a&gt;. O vídeo da home do site é uma palestra de apresentação da linguagem. No momento em que Andrew Gerrand diz que o serviço web provido pelo Go é utilizado na página principal do Google(google.com) fiquei espantado e curioso. Voilà! Ingressei nesse universo.&lt;/p&gt;

&lt;p&gt;Aqui eu compartilharei o que já apanhei muito pra fazer, além é claro, de divulgar minhas novas descobertas. Será um prazer trazer esse conteúdo e poder ajudar alguém que precise!&lt;/p&gt;

&lt;p&gt;Seja bem vindo criatura cósmica,&lt;/p&gt;

&lt;p&gt;Bom dia e boa sorte!&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Oct 2016 00:00:00 -0200</pubDate>
        <link>http://gcruz.com.br/blog/seja-bem-vindo/</link>
        <guid isPermaLink="true">http://gcruz.com.br/blog/seja-bem-vindo/</guid>
        
        
      </item>
      
    
  </channel>
</rss>
